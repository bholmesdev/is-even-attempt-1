---
import { db } from '../utils/db'
import Layout from '../components/Layout.astro'
import { isEmail, isString } from '../utils/form';
import Error from '../components/Error.astro';

let errors = {
  banner: null,
  username: null,
  email: null,
  password: null,
};

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData()
  const username = formData.get('username')
  const email = formData.get('email')
  const password = formData.get('password')
  const loginType = formData.get('loginType')

  if (isString(username) && isString(email) && isString(password) && isString(loginType)) {
    if (!isEmail(email)) {
      errors.email = 'Emails must use a valid format (evenStan@example.com)'
    }
    if (password.length < 6) {
      errors.password = 'Passwords must be at least 6 characters long'
    }
    if (loginType === 'register') {
    const userExists = await db.profile.findFirst({ where: { username } })
    if (userExists) {
      errors.banner = `Profile with username ${username} already exists! Try logging in.`
    } else {
      console.log('creating user...', loginType)
    }
  }
  } else {
    errors.banner = "Hm, this response seems invalid. Please try again later."
  }

  if (Object.values(errors).some(Boolean)) {
    Astro.response.status = 400
  } else {
  }
}

const searchParams = new URLSearchParams(Astro.request.url)
---

<Layout title="Sign Up | About Me">
  <div class="heading">
    <h1 class="visually-hidden">Login</h1>
    <p class="tagline">How can we tell you about your number, <br /> when we donâ€™t <strong>even</strong> know you!</p>
    <Error text={errors.banner} />
  </div>
  <div class="form-bg">
    <form method="post">
      <fieldset>
        <legend class="visually-hidden">
          Login or Register?
        </legend>
        <label>
          <input
            type="radio"
            name="loginType"
            value="login"
            checked
          />
          Login
        </label>
        <label>
          <input
            type="radio"
            name="loginType"
            value="register"
          />
          Register
        </label>
      </fieldset>
      <input
        type="hidden"
        name="redirectTo"
        value={
          searchParams.get("redirectTo") ?? undefined
        }
      />
      <label>
        Username
        <input class="text-input" type="text" name="username" required>
        <Error text={errors.username} />
      </label>
      <label>
        Email
        <input class="text-input" type="email" name="email" required>
        <Error text={errors.email} />
      </label>
      <label>
        Password
        <input class="text-input" type="password" name="password" required>
        <Error text={errors.password} />
      </label>
      <label>
        Confirm password
        <input class="text-input" type="password" name="confirmPassword" required>
      </label>
      <button type="submit">Sign Up</button>
    </form> 
  </div>
</Layout>

<style>
  .heading {
    padding-block: var(--size-9);
    max-width: 60ch;
    margin: auto;
  }
  .text-input, button {
    display: block;
    width: 100%;
    outline-color: var(--brand);
  }
  .form-bg {
    background: var(--surface-2);
    block-size: 100%;
  }
  form {
    background: var(--surface-1);
    max-width: 60ch;
    margin: auto;
    padding: var(--size-4);
    display: grid;
    gap: var(--size-6);
  }
  strong {
    color: var(--brand);
  }
  h1, .tagline {
    text-align: center;
  }
  .tagline {
    font-size: var(--font-size-fluid-1);
  }
  button[type="submit"] {
    background-color: var(--brand);
    color: var(--gray-0);
    padding: var(--size-2);
    border-radius: var(--radius-2);
  }
</style>